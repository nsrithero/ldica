//3 to 8 decoder//
---design---
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity decoder is
  Port ( i2,i1,i0 : in  STD_LOGIC;
          d : out  STD_LOGIC_vector(7 downto 0));
         end decoder;
architecture Behavioral of decoder is
begin
process(i2,i1,i0)
variable input : std_logic_vector(2 DOWNTO 0);
     begin
       input:=i2&i1&i0;
          
      case input is
                when "000"=>d<="00000001";
                when "001"=>d<="00000010";
                when "010"=>d<="00000100";
                when "011"=>d<="00001000";
               when "100"=>d<="00010000";
               when "101"=>d<="00100000";
 when "110"=>d<="01000000";
              when others=>d<="10000000";
       end case;
end process;
end Behavioral;


---testbench---


Library ieee;
use ieee.std_logic_1164.all;
entity tb2 is
Port ( );
end tb2;

architecture Behavioral of tb2 is

-- declare DUT as a component in test bench
component Deco3X8
    -- port declaration part of the component
    Port (
        a : in STD_LOGIC_VECTOR (2 downto 0);
        o : out STD_LOGIC_VECTOR (7 downto 0));
end component;

-- declare the signals to interface with the ports
signal a : STD_LOGIC_VECTOR(2 downto 0);
signal o : STD_LOGIC_VECTOR(7 downto 0);

-- architecture body
begin

-- take the instance of the DUT in architecure body
D1: Deco3X8 Port map (a,o);
-- behaviour logic in process
    process
    -- process body
        begin
        -- generate signal to represent all possible combination after delay of 10ns
        a<="000";wait for 10 ns;
        a<="001";wait for 10 ns;
        a<="010";wait for 10 ns;
        a<="011";wait for 10 ns;
        a<="100";wait for 10 ns;
        a<="101";wait for 10 ns;
        a<="110";wait for 10 ns;
        a<="111";wait for 10 ns;
        
       wait;
    end process;
    
end Behavioral;